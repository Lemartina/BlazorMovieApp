@page "/movies"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using BlazorMovieApp
@using BlazorMovieApp.Data
@rendermode InteractiveServer

@implements IAsyncDisposable
@inject IDbContextFactory<BlazorMovieApp.Data.BlazorMovieAppContext> DbFactory

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="movies/create">Create New</a>
</p>

<QuickGrid Class="table" Items="FilteredMovie" Pagination="state">
    <PropertyColumn Property="movie => movie.Title" Sortable="true"/>
        <ColumOptions>
            <div>
                <input type="search" @bind="titleFilter" @bind:event="oninput" autofocus />
            </div>
        </ColumOptions>
    <PropertyColumn Property="movie => movie.RelaseDate" Title="Realise date" Format="MM/dd/yyyy"/>
    <PropertyColumn Property="movie => movie.Genre" />
    <PropertyColumn Property="movie => movie.Price" />

    <TemplateColumn Context="movie">
        <a href="@($"movies/edit?id={movie.Id}")">Edit</a> |
        <a href="@($"movies/details?id={movie.Id}")">Details</a> |
        <a href="@($"movies/delete?id={movie.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

<Paginator State="state" />

@code{
    PaginationState state = new PaginationState { ItemsPerPage = 1 };
    string titleFilter = "";
    IQueryable<Movie> FilteredMovie => context.Movie.Where(m => m.Title.Contains(titleFilter));
}

@code {
    private BlazorMovieAppContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
